{"version":3,"sources":["services/weather.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","get","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","r","lat","coords","latitude","lng","longitude","axios","data","getbyzipcode","zipcode","Modal","setAppElement","TitleBar","title","style","backgroundColor","borderBottom","paddingTop","height","borderRadius","width","paddingLeft","paddingRight","color","fontFamily","fontSize","marginLeft","marginRight","textAlign","Scene","temperature","time","weatherCode","scene","icon","length","hour","Number","match","PMAM","Object","entries","clear","partly_cloudy","cloudy","rain","snow","key","includes","border","borderWidth","maxHeight","maxWidth","backgroundImage","backgroundSize","backgroundPosition","mode","forceSingleModeWidth","max","marginTop","textShadow","fontWeight","paddingBottom","Description","Credits","listOfCredits","minWidth","map","credit","ChangeLocationButton","handleClick","onClick","outline","ChangeLocationModal","show","prevZipCode","handleNewZipCode","handleBadZipCode","useState","newZipCode","setNewZipCode","isOpen","onAfterOpen","onRequestClose","content","top","left","right","bottom","transform","onSubmit","e","preventDefault","test","autoFocus","onChange","target","value","App","setTemperature","setWeatherCode","setTime","showLocationModal","setShowLocationModal","setZipCode","userZipCode","setUserZipCode","useEffect","weatherService","location","formZipCode","className","display","flexDirection","minHeight","gap","flexGrow","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a343a07.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl =  `/api/location`\r\n\r\nfunction getbyzipcode(zipcode) { \r\n    return axios.get(baseUrl+'?zipcode='+zipcode)       \r\n        .then(r => r.data)\r\n}   \r\n\r\nfunction get() { \r\n    return new Promise((resolve, reject) => \r\n        navigator.geolocation.getCurrentPosition(resolve, reject))\r\n    .then(r => {\r\n        const lat = r.coords.latitude\r\n        const lng = r.coords.longitude\r\n        return axios.get(baseUrl+'?lat='+lat+'&lng='+lng)       \r\n    })\r\n    .then(r => r.data)\r\n}        \r\n    \r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default  {\r\n    get,\r\n    getbyzipcode\r\n}","import React, {useState, useEffect} from \"react\";\nimport weatherService from \"./services/weather\"\nimport { Textfit } from 'react-textfit'\nimport Modal from \"react-modal\"\n\nModal.setAppElement('#root');\n\nconst TitleBar = ({title}) => \n  <div \n  style={{backgroundColor:\"pink\",\n          borderBottom:'solid 1vw lightcoral',\n          paddingTop:'1vw',\n          height:'fit-content'}}>\n    <h1\n      style={{backgroundColor:\"lightcoral\",\n              borderRadius:'3vw',   \n              width:'fit-content',           \n              height:'fit-content',\n              paddingLeft:'2%',\n              paddingRight:'2%',\n              color:'white',\n              fontFamily:'Patrick Hand',\n              fontSize:'10vw',\n              marginLeft:'auto', // center\n              marginRight:'auto',\n              textAlign:'center'}}>\n      {title}\n   </h1>\n</div>\n\nconst Scene = ({temperature, time, weatherCode}) => \n{\n  let scene = 'warm'\n  let icon = 'clear'\n\n  if (time && time.length > 1) {\n    const hour = Number(time.match(/^\\d\\d?/)[0])\n    const PMAM = time.match(/PM|AM/)[0]  \n    if ((hour >= 8 && PMAM === 'PM')\n      || (hour < 6 && PMAM === 'AM')) {\n      scene = 'late'\n    } else if (temperature <= 30) {\n      scene = 'snow'  \n    } else if (temperature <= 60) {\n      scene = 'cold'  \n    } else if (temperature <= 80) {\n      scene = 'medium'  \n    } else {\n      scene = 'warm'\n    }     \n    if ((hour >= 8 && PMAM === 'PM')      \n    || (hour < 6 && PMAM === 'AM')) {\n      icon = 'late'\n    } else {\n      const icon_weatherCode_map = {\n        clear:[113],\n        partly_cloudy:[116,119],\n        cloudy:[122, 143, 176, 179, \n                200, 248, 260, 263,  \n                266, 281, 293, 296],\n        rain:[296, 299, 302, 205,  \n              208, 356, 359, 362,\n              377, 386, 389, 392],\n        snow:[227, 230, 281, 284, \n              311, 314, 317, 320, \n              323, 326, 329, 335, \n              338, 350, 365, 368, \n              374, 395]\n      }\n      for (const [key, value] of Object.entries(icon_weatherCode_map)) {\n        if (value.includes(weatherCode)) {\n          icon = key\n          break\n        }\n      }\n    }\n\n  }\nreturn <div\n      style={{border:'solid lightcoral',        \n              borderRadius:'2vw',\n              borderWidth:'1vw',\n              maxHeight:'100vh',              \n              height:'80vw',\n              width:'80vw',\n              maxWidth:'100vh',\n              marginLeft:'auto',\n              marginRight:'auto',\n              backgroundImage:`url(./scenes/${scene}.png)`,\n              backgroundSize:'100% 100%',\n              backgroundPosition:'center'}}>\n        <Textfit mode='single'\n          forceSingleModeWidth={false}\n          max={1000}\n           style={{backgroundColor:'yellow',\n                   backgroundImage:`url(./icons/${icon}.png)`,\n                   backgroundPosition:'center',\n                   backgroundSize:'cover',\n                   width:'25%',\n                   height:'25%',\n                   marginLeft:'auto',\n                   marginRight:'2%',\n                   marginTop:'2%',\n                   border:'solid lightcoral',\n                   color:'white',\n                   textShadow: '-.015em -.015em 0 #000, .015em -.015em 0 #000, -.015em .015em 0 #000, .015em .015em 0 #000', \n                   borderRadius:'10%',\n                   fontWeight:'bold'\n                   }}>\n          {`${temperature}°`}\n        </Textfit>    \n        <Textfit mode='single'\n          max={1000}\n           style={{backgroundColor:'pink',\n                   backgroundPosition:'center',\n                   backgroundSize:'cover',\n                   width:'25%',\n                   height:'8%',\n                   marginLeft:'auto',\n                   marginRight:'2%',\n                   marginTop:'2%',\n                   border:'solid lightcoral',\n                   color:'white',                   \n                   borderRadius:'10%',\n                   textAlign:'center',\n                   fontWeight:'bold',                  \n                   paddingLeft:'1%',\n                   paddingRight:'1%',\n                   paddingBottom:'9%'\n                   }}>\n          {`${time}`}\n        </Textfit>\n  </div>    \n}\n\nconst Description = () => \n<div\n  style={{\n    marginLeft:'auto',\n    marginRight:'auto',\n    width:'80%',\n    backgroundColor:\"lightcoral\",\n    borderRadius:'2vw',\n    border:'pink'\n  }}>    \n      <h2\n      style={{\n        color: 'white',\n        fontSize: '5vw',\n        fontFamily:'Patrick Hand',\n        paddingLeft:'2%',\n        marginTop:'1%'\n    }}>\n        What is this?\n      </h2>\n<h2\n    style={{\n      color: 'white',\n      fontSize: '4vw',\n      fontFamily:'Patrick Hand',\n      paddingLeft:'2vw',\n      paddingRight:'2vw'\n  }}> coco's weather app presents the solution for when you just don't know what to wear outside! Come night, rain, snow, or sunshine this app will make sure you're appropriately dressed for the occasion....\n  </h2>   \n</div>\n\nconst Credits = ({listOfCredits}) =>\n    <div\n    style={{\n      marginLeft:'auto',\n      marginRight:'auto',\n      width:'80%',\n      minWidth:'80%',\n      backgroundColor:\"lightcoral\",\n      borderRadius:'2vw',\n      border:'pink'\n    }}>     \n      <h2\n      style={{\n        color: 'white',\n        fontSize: '5vw',\n        fontFamily:'Patrick Hand',\n        paddingLeft:'2%',\n        marginTop:'1%'\n    }}>\n        Who Made This?\n      </h2>\n      {listOfCredits.map(credit =>       \n      <h2 key={credit}\n      style={{\n        color: 'white',\n        fontSize: '4vw',\n        fontFamily:'Patrick Hand',\n        paddingLeft:'2%'\n    }}>> {credit}\n      </h2>)}                        \n    </div>\n\nconst ChangeLocationButton = ({handleClick, zipcode}) => \n      <button \n        onClick={() => handleClick()}\n        style={{\n          width:'50%',\n          marginLeft:'auto',\n          marginRight:'auto',\n          backgroundColor:'lightcoral',\n          border:'none',\n          fontFamily:'Patrick Hand',\n          fontSize:'6vw',\n          outline:'none',\n          color:'white'\n        }}>\n        {`Change Zip Code (${zipcode})`}\n      </button>\n    \nconst ChangeLocationModal = ({show, prevZipCode, handleNewZipCode, handleBadZipCode}) => {\n  const [newZipCode, setNewZipCode] = useState(prevZipCode)\n  return <Modal     \n            isOpen={show}\n            onAfterOpen={() => {}}\n            onRequestClose={() => {}}\n            style={{content:{top:'50%', \n                            left:'50%', \n                            right:'auto', \n                            bottom:'auto', \n                            marginRight:'-50%', \n                            transform: 'translate(-50%, -50%)',\n                            backgroundColor:'lightcoral'}}}>\n              <h2 style={{\n                color:'white',\n                fontFamily:'Patrick Hand'\n              }}>\n                Type in a ZipCode!\n                </h2>\n              <form onSubmit={(e) => {\n                e.preventDefault()\n                if (/^\\d{5}$/.test(newZipCode)) {\n                  handleNewZipCode(newZipCode)\n                } else {\n                  handleBadZipCode(newZipCode)\n                }\n              }}>\n                <input autoFocus onChange={(e) => setNewZipCode(e.target.value)}/>\n              </form>\n  </Modal>\n}\n\nfunction App() {\n  const [temperature, setTemperature] = useState(0)\n  const [weatherCode, setWeatherCode] = useState(0)\n  const [time, setTime] = useState('')\n  const [showLocationModal, setShowLocationModal] = useState(false)\n  const [zipcode, setZipCode] = useState(null)\n  const [userZipCode, setUserZipCode] = useState(null)\n\n  useEffect(() => {\n    \n    if (userZipCode) {\n      weatherService.getbyzipcode(userZipCode).then(location => \n        {\n          setTime(location.time)\n          setTemperature(location.temperature)\n          setZipCode(location.zipcode)\n          setWeatherCode(location.weatherCode)\n        }\n      )\n    } else {\n      weatherService.get().then(location => \n        {\n          setTime(location.time)\n          setTemperature(location.temperature)\n          setZipCode(location.zipcode)\n          setWeatherCode(location.weatherCode)\n        }\n      )\n    }\n  }\n  ,[zipcode, userZipCode])\n\n  const handleNewZipCode = (formZipCode) => {    \n    setZipCode(formZipCode)\n    setUserZipCode(formZipCode)\n    setShowLocationModal(false)\n  }\n\n  const handleBadZipCode = (formZipCode) => {    \n    setShowLocationModal(false)\n  }  \n\n  const handleLocationButtonClick = () => {\n    setShowLocationModal(true)  \n  }\n\n  if (temperature !== 0) {\n    if (showLocationModal) {\n      return <div onClick={() => setShowLocationModal(false)} style={{backgroundColor:'pink'}}>\n                <ChangeLocationModal \n                  show={showLocationModal} \n                  zipcode={zipcode}\n                  handleNewZipCode={handleNewZipCode}\n                  handleBadZipCode={handleBadZipCode}/>\n              </div>\n    } else {\n      return <div className=\"flex\"\n                  style={{\n                  display:\"flex\",\n                  flexDirection:\"column\",\n                  backgroundColor:'deepskyblue',\n                  minHeight:'100vh',\n                  gap:'1vw'}}>        \n              <TitleBar title=\"Coco's Weather App!\" />\n              <Scene temperature={temperature} time={time} weatherCode={weatherCode} />\n              <ChangeLocationButton handleClick={handleLocationButtonClick} zipcode={zipcode} />    \n              <div style={{flexGrow:1}}/>\n              <Description />\n              <Credits listOfCredits={['inventor Coco Moore', \n                        'developer Jesse Bergerstock', \n                        'artist Jasmine Sutton']}\n                        style={{marginBottom:'auto'}}/>  \n              <div/>\n              <div style={{flexGrow:1}}/>\n            </div> \n    }\n    \n\n      \n  } else {\n    return <div/>\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}