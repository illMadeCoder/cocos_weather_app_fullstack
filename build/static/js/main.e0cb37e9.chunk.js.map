{"version":3,"sources":["services/weather.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","get","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","r","lat","coords","latitude","lng","longitude","axios","data","getbyzipcode","zipcode","Modal","setAppElement","TitleBar","title","style","backgroundColor","borderBottom","paddingTop","height","borderRadius","width","paddingLeft","paddingRight","color","fontFamily","fontSize","marginLeft","marginRight","textAlign","Scene","temperature","time","weatherCode","scene","icon","length","hour","Number","match","PMAM","Object","entries","clear","partly_cloudy","cloudy","rain","snow","key","includes","border","borderWidth","maxHeight","maxWidth","backgroundImage","backgroundSize","backgroundPosition","mode","forceSingleModeWidth","max","marginTop","textShadow","fontWeight","paddingBottom","Description","Credits","listOfCredits","minWidth","map","credit","ChangeLocationButton","handleClick","onClick","outline","ChangeLocationModal","show","prevZipCode","handleNewZipCode","handleBadZipCode","useState","newZipCode","setNewZipCode","isOpen","onAfterOpen","onRequestClose","content","top","left","right","bottom","transform","onSubmit","e","preventDefault","test","autoFocus","onChange","target","value","App","setTemperature","setWeatherCode","setTime","showLocationModal","setShowLocationModal","setZipCode","userZipCode","setUserZipCode","useEffect","weatherService","location","formZipCode","className","display","flexDirection","minHeight","gap","flexGrow","marginBottom","position","loading","css","size","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0cb37e9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl =  `/api/location`\r\n\r\nfunction getbyzipcode(zipcode) { \r\n    return axios.get(baseUrl+'?zipcode='+zipcode)       \r\n        .then(r => r.data)\r\n}   \r\n\r\nfunction get() { \r\n    return new Promise((resolve, reject) => \r\n        navigator.geolocation.getCurrentPosition(resolve, reject))\r\n    .then(r => {\r\n        const lat = r.coords.latitude\r\n        const lng = r.coords.longitude\r\n        return axios.get(baseUrl+'?lat='+lat+'&lng='+lng)       \r\n    })\r\n    .then(r => r.data)\r\n}        \r\n    \r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default  {\r\n    get,\r\n    getbyzipcode\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport weatherService from \"./services/weather\"\r\nimport { Textfit } from 'react-textfit'\r\nimport Modal from \"react-modal\"\r\nimport GridLoader from \"react-spinners/GridLoader\"\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst TitleBar = ({title}) => \r\n  <div \r\n  style={{backgroundColor:\"pink\",\r\n          borderBottom:'solid 1vw lightcoral',\r\n          paddingTop:'1vw',\r\n          height:'fit-content'}}>\r\n    <h1\r\n      style={{backgroundColor:\"lightcoral\",\r\n              borderRadius:'3vw',   \r\n              width:'fit-content',           \r\n              height:'fit-content',\r\n              paddingLeft:'2%',\r\n              paddingRight:'2%',\r\n              color:'white',\r\n              fontFamily:'Patrick Hand',\r\n              fontSize:'10vw',\r\n              marginLeft:'auto', // center\r\n              marginRight:'auto',\r\n              textAlign:'center'}}>\r\n      {title}\r\n   </h1>\r\n</div>\r\n\r\nconst Scene = ({temperature, time, weatherCode}) => \r\n{\r\n  let scene = 'warm'\r\n  let icon = 'clear'\r\n\r\n  if (time && time.length > 1) {\r\n    const hour = Number(time.match(/^\\d\\d?/)[0])\r\n    const PMAM = time.match(/PM|AM/)[0]  \r\n    if ((hour >= 8 && PMAM === 'PM')\r\n      || (hour < 6 && PMAM === 'AM')) {\r\n      scene = 'late'\r\n    } else if (temperature <= 30) {\r\n      scene = 'snow'  \r\n    } else if (temperature <= 60) {\r\n      scene = 'cold'  \r\n    } else if (temperature <= 80) {\r\n      scene = 'medium'  \r\n    } else {\r\n      scene = 'warm'\r\n    }     \r\n    if ((hour >= 8 && PMAM === 'PM')      \r\n    || (hour < 6 && PMAM === 'AM')) {\r\n      icon = 'late'\r\n    } else {\r\n      const icon_weatherCode_map = {\r\n        clear:[113],\r\n        partly_cloudy:[116,119],\r\n        cloudy:[122, 143, 176, 179, \r\n                200, 248, 260, 263,  \r\n                266, 281, 293, 296],\r\n        rain:[296, 299, 302, 205,  \r\n              208, 356, 359, 362,\r\n              377, 386, 389, 392],\r\n        snow:[227, 230, 281, 284, \r\n              311, 314, 317, 320, \r\n              323, 326, 329, 335, \r\n              338, 350, 365, 368, \r\n              374, 395]\r\n      }\r\n      for (const [key, value] of Object.entries(icon_weatherCode_map)) {\r\n        if (value.includes(weatherCode)) {\r\n          icon = key\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\nreturn <div\r\n      style={{border:'solid lightcoral',        \r\n              borderRadius:'2vw',\r\n              borderWidth:'1vw',\r\n              maxHeight:'100vh',              \r\n              height:'80vw',\r\n              width:'80vw',\r\n              maxWidth:'100vh',\r\n              marginLeft:'auto',\r\n              marginRight:'auto',\r\n              backgroundImage:`url(./scenes/${scene}.png)`,\r\n              backgroundSize:'100% 100%',\r\n              backgroundPosition:'center'}}>\r\n        <Textfit mode='single'\r\n          forceSingleModeWidth={false}\r\n          max={1000}\r\n           style={{backgroundColor:'yellow',\r\n                   backgroundImage:`url(./icons/${icon}.png)`,\r\n                   backgroundPosition:'center',\r\n                   backgroundSize:'cover',\r\n                   width:'25%',\r\n                   height:'25%',\r\n                   marginLeft:'auto',\r\n                   marginRight:'2%',\r\n                   marginTop:'2%',\r\n                   border:'solid lightcoral',\r\n                   color:'white',\r\n                   textShadow: '-.015em -.015em 0 #000, .015em -.015em 0 #000, -.015em .015em 0 #000, .015em .015em 0 #000', \r\n                   borderRadius:'10%',\r\n                   fontWeight:'bold'\r\n                   }}>\r\n          {`${temperature}°`}\r\n        </Textfit>    \r\n        <Textfit mode='single'\r\n          max={1000}\r\n           style={{backgroundColor:'pink',\r\n                   backgroundPosition:'center',\r\n                   backgroundSize:'cover',\r\n                   width:'25%',\r\n                   height:'8%',\r\n                   marginLeft:'auto',\r\n                   marginRight:'2%',\r\n                   marginTop:'2%',\r\n                   border:'solid lightcoral',\r\n                   color:'white',                   \r\n                   borderRadius:'10%',\r\n                   textAlign:'center',\r\n                   fontWeight:'bold',                  \r\n                   paddingLeft:'1%',\r\n                   paddingRight:'1%',\r\n                   paddingBottom:'9%'\r\n                   }}>\r\n          {`${time}`}\r\n        </Textfit>\r\n  </div>    \r\n}\r\n\r\nconst Description = () => \r\n<div\r\n  style={{\r\n    marginLeft:'auto',\r\n    marginRight:'auto',\r\n    width:'80%',\r\n    backgroundColor:\"lightcoral\",\r\n    borderRadius:'2vw',\r\n    border:'pink'\r\n  }}>    \r\n      <h2\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '5vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%',\r\n        marginTop:'1%'\r\n    }}>\r\n        What is this?\r\n      </h2>\r\n<h2\r\n    style={{\r\n      color: 'white',\r\n      fontSize: '4vw',\r\n      fontFamily:'Patrick Hand',\r\n      paddingLeft:'2vw',\r\n      paddingRight:'2vw'\r\n  }}> coco's weather app presents the solution for when you just don't know what to wear outside! Come night, rain, snow, or sunshine this app will make sure you're appropriately dressed for the occasion....\r\n  </h2>   \r\n</div>\r\n\r\nconst Credits = ({listOfCredits}) =>\r\n    <div\r\n    style={{\r\n      marginLeft:'auto',\r\n      marginRight:'auto',\r\n      width:'80%',\r\n      minWidth:'80%',\r\n      backgroundColor:\"lightcoral\",\r\n      borderRadius:'2vw',\r\n      border:'pink'\r\n    }}>     \r\n      <h2\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '5vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%',\r\n        marginTop:'1%'\r\n    }}>\r\n        Who Made This?\r\n      </h2>\r\n      {listOfCredits.map(credit =>       \r\n      <h2 key={credit}\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '4vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%'\r\n    }}>> {credit}\r\n      </h2>)}                        \r\n    </div>\r\n\r\nconst ChangeLocationButton = ({handleClick, zipcode}) => \r\n      <button \r\n        onClick={() => handleClick()}\r\n        style={{\r\n          width:'50%',\r\n          marginLeft:'auto',\r\n          marginRight:'auto',\r\n          backgroundColor:'lightcoral',\r\n          border:'none',\r\n          fontFamily:'Patrick Hand',\r\n          fontSize:'6vw',\r\n          outline:'none',\r\n          color:'white'\r\n        }}>\r\n        {`Change Zip Code (${zipcode})`}\r\n      </button>\r\n    \r\nconst ChangeLocationModal = ({show, prevZipCode, handleNewZipCode, handleBadZipCode}) => {\r\n  const [newZipCode, setNewZipCode] = useState(prevZipCode)\r\n  return <Modal     \r\n            isOpen={show}\r\n            onAfterOpen={() => {}}\r\n            onRequestClose={() => {}}\r\n            style={{content:{top:'50%', \r\n                            left:'50%', \r\n                            right:'auto', \r\n                            bottom:'auto', \r\n                            marginRight:'-50%', \r\n                            transform: 'translate(-50%, -50%)',\r\n                            backgroundColor:'lightcoral'}}}>\r\n              <h2 style={{\r\n                color:'white',\r\n                fontFamily:'Patrick Hand'\r\n              }}>\r\n                Type in a ZipCode!\r\n                </h2>\r\n              <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n                if (/^\\d{5}$/.test(newZipCode)) {\r\n                  handleNewZipCode(newZipCode)\r\n                } else {\r\n                  handleBadZipCode(newZipCode)\r\n                }\r\n              }}>\r\n                <input autoFocus onChange={(e) => setNewZipCode(e.target.value)}/>\r\n              </form>\r\n  </Modal>\r\n}\r\n\r\nfunction App() {\r\n  const [temperature, setTemperature] = useState(0)\r\n  const [weatherCode, setWeatherCode] = useState(0)\r\n  const [time, setTime] = useState('')\r\n  const [showLocationModal, setShowLocationModal] = useState(false)\r\n  const [zipcode, setZipCode] = useState(null)\r\n  const [userZipCode, setUserZipCode] = useState(null)\r\n\r\n  useEffect(() => {    \r\n    if (userZipCode) {\r\n      weatherService.getbyzipcode(userZipCode).then(location => \r\n        {\r\n          setTime(location.time)\r\n          setTemperature(location.temperature)\r\n          setZipCode(location.zipcode)\r\n          setWeatherCode(location.weatherCode)\r\n        }\r\n      )\r\n    } else {\r\n      weatherService.get().then(location => \r\n        {\r\n          setTime(location.time)\r\n          setTemperature(location.temperature)\r\n          setZipCode(location.zipcode)\r\n          setWeatherCode(location.weatherCode)\r\n        }\r\n      )\r\n    }\r\n  }\r\n  ,[zipcode, userZipCode])\r\n\r\n  const handleNewZipCode = (formZipCode) => {    \r\n    setZipCode(formZipCode)\r\n    setUserZipCode(formZipCode)\r\n    setShowLocationModal(false)\r\n  }\r\n\r\n  const handleBadZipCode = (formZipCode) => {    \r\n    setShowLocationModal(false)\r\n  }  \r\n\r\n  const handleLocationButtonClick = () => {\r\n    setShowLocationModal(true)  \r\n  }\r\n\r\n  if (temperature !== 0) {\r\n      return <div style={{backgroundColor:'pink'}}>\r\n                <ChangeLocationModal \r\n                  show={showLocationModal} \r\n                  zipcode={zipcode}\r\n                  handleNewZipCode={handleNewZipCode}\r\n                  handleBadZipCode={handleBadZipCode}/>\r\n                      <div className=\"flex\"\r\n                      style={{\r\n                      display:\"flex\",\r\n                      flexDirection:\"column\",\r\n                      backgroundColor:'deepskyblue',\r\n                      minHeight:'100vh',\r\n                      gap:'1vw'}}>        \r\n                  <TitleBar title=\"Coco's Weather App!\" />\r\n                  <Scene temperature={temperature} time={time} weatherCode={weatherCode} />\r\n                  <ChangeLocationButton handleClick={handleLocationButtonClick} zipcode={zipcode} />    \r\n                  <div style={{flexGrow:1}}/>\r\n                  <Description />\r\n                  <Credits listOfCredits={['inventor Coco Moore', \r\n                            'developer Jesse Bergerstock', \r\n                            'artist Jasmine Sutton']}\r\n                            style={{marginBottom:'auto'}}/>  \r\n                  <div/>\r\n                  <div style={{flexGrow:1}}/>\r\n                </div> \r\n              </div>        \r\n  } else {\r\n    return <div className='sweet-loading'\r\n    style={{\r\n      position:'fixed',\r\n      left:\"50%\",\r\n      top:\"50%\",\r\n      transform: \"translate(-50%, 50%)\"\r\n    }}>\r\n      <GridLoader \r\n        color={'pink'} \r\n        loading={true} \r\n        css=''\r\n        size={30}\r\n        margin={1} />\r\n    </div>\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}