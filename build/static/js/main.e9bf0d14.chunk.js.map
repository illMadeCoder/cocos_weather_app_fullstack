{"version":3,"sources":["services/weather.js","components/ChangeLocationModal.js","components/TitleBar.js","components/Scene.js","components/Description.js","components/Credits.js","components/ChangeLocationButton.js","components/Loader.js","components/ErrorMessage.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","zipcode","a","axios","get","response","data","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","geo","lat","coords","latitude","lng","longitude","getbyzipcode","Modal","setAppElement","show","prevZipCode","handleNewZipCode","isBadZipCode","handleBadZipCode","useState","newZipCode","setNewZipCode","isOpen","onAfterOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","width","backgroundColor","color","fontFamily","fontSize","marginLeft","textAlign","onSubmit","e","preventDefault","autoFocus","onChange","target","value","title","borderBottom","paddingTop","height","borderRadius","paddingLeft","paddingRight","temperature","time","weatherCode","scene","icon","length","hour","Number","match","PMAM","Object","entries","clear","partly_cloudy","cloudy","rain","snow","key","includes","border","borderWidth","maxHeight","maxWidth","backgroundImage","backgroundSize","backgroundPosition","mode","forceSingleModeWidth","max","marginTop","textShadow","fontWeight","paddingBottom","listOfCredits","minWidth","map","credit","handleClick","location","onClick","outline","className","position","errorMessage","App","setTemperature","setWeatherCode","setTime","showLocationModal","setShowLocationModal","setZipCode","userZipCode","setUserZipCode","loaded","setLoaded","setIsBadZipCode","locationName","setLocationName","setErrorMessage","useEffect","weatherService","name","status","ErrorMessage","backgroundAttachment","ChangeLocationModal","formZipCode","display","flexDirection","minHeight","gap","TitleBar","Scene","ChangeLocationButton","flexGrow","Description","Credits","marginBottom","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9bf0d14.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl =  `/api/location`\r\n\r\nasync function getbyzipcode(zipcode) {     \r\n    const response = await axios.get(baseUrl+'?zipcode='+zipcode)        \r\n    return response.data\r\n}   \r\n\r\nasync function get() {\r\n    const geo = await new Promise((resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject))\r\n    const lat = geo.coords.latitude\r\n    const lng = geo.coords.longitude\r\n    const response = await axios.get(baseUrl+'?lat='+lat+'&lng='+lng) \r\n    return response.data    \r\n}        \r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default  {\r\n    get,\r\n    getbyzipcode\r\n}","import Modal from \"react-modal\"\r\nimport React, {useState} from \"react\";\r\n\r\nModal.setAppElement('#root');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function ({ show, prevZipCode, handleNewZipCode, handleBadZipCode, isBadZipCode }) {\r\n    const [newZipCode, setNewZipCode] = useState(prevZipCode)\r\n    return <Modal\r\n        isOpen={show}\r\n        onAfterOpen={() => { } }\r\n        onRequestClose={() => { } }\r\n        style={{\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                width: '50%',\r\n                backgroundColor: 'lightcoral'\r\n            }\r\n        }}>\r\n        <h2 style={{\r\n            color: 'white',\r\n            fontFamily: 'Patrick Hand',\r\n            fontSize: '4em',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            textAlign: 'center'\r\n        }}>\r\n            {isBadZipCode === true ? \"Unknown ZipCode - Try Again\" : 'Type in a ZipCode!'}\r\n        </h2>\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            handleNewZipCode(newZipCode)\r\n        } }>\r\n            <input autoFocus\r\n                onChange={(e) => {\r\n                    setNewZipCode(e.target.value)\r\n                } }\r\n                value={newZipCode}\r\n                style={{\r\n                    fontFamily: 'Patrick Hand',\r\n                    fontSize: '4em',\r\n                    width: '100%',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto',\r\n                    textAlign: 'center'\r\n                }} />\r\n        </form>\r\n    </Modal>\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({title}) => \r\n    <div \r\n    style={{\r\n            backgroundColor:\"pink\",\r\n            borderBottom:'solid 1vw lightcoral',\r\n            paddingTop:'1vw',\r\n            height:'fit-content'}}>\r\n      <h1\r\n        style={{backgroundColor:\"lightcoral\",\r\n                borderRadius:'3vw',   \r\n                width:'fit-content',           \r\n                height:'fit-content',\r\n                paddingLeft:'2%',\r\n                paddingRight:'2%',\r\n                color:'white',\r\n                fontFamily:'Patrick Hand',\r\n                fontSize:'10vw',\r\n                marginLeft:'auto', // center\r\n                marginRight:'auto',\r\n                textAlign:'center'}}>\r\n        {title}\r\n     </h1>\r\n  </div>","import { Textfit } from 'react-textfit'\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({temperature, time, weatherCode}) => \r\n{\r\n  let scene = 'warm'\r\n  let icon = 'clear'\r\n\r\n  if (time && time.length > 1) {\r\n    const hour = Number(time.match(/^\\d\\d?/)[0])\r\n    const PMAM = time.match(/PM|AM/)[0]  \r\n    if ((hour >= 8 && hour < 12 && PMAM === 'PM')\r\n      || ((hour < 6 || hour === 12) && PMAM === 'AM')) {\r\n        if (temperature <= 60) {\r\n          scene = 'late_cold'\r\n        } else {\r\n          scene = 'late_warm'\r\n        }      \r\n    } else if (temperature <= 30) {\r\n      scene = 'snow'  \r\n    } else if (temperature <= 60) {\r\n      scene = 'cold'  \r\n    } else if (temperature <= 80) {\r\n      scene = 'medium'  \r\n    } else {\r\n      scene = 'warm'\r\n    }     \r\n    if ((hour >= 8 && hour != 12 && PMAM === 'PM')      \r\n    || (hour < 6 && PMAM === 'AM')) {\r\n      icon = 'late'\r\n    } else {\r\n      const icon_weatherCode_map = {\r\n        clear:[113],\r\n        partly_cloudy:[116,119],\r\n        cloudy:[122, 143, 176, 179, \r\n                200, 248, 260, 263,  \r\n                266, 281, 293, 296],\r\n        rain:[296, 299, 302, 205,  \r\n              208, 356, 359, 362,\r\n              377, 386, 389, 392],\r\n        snow:[227, 230, 281, 284, \r\n              311, 314, 317, 320, \r\n              323, 326, 329, 335, \r\n              338, 350, 365, 368, \r\n              374, 395]\r\n      }\r\n      for (const [key, value] of Object.entries(icon_weatherCode_map)) {\r\n        if (value.includes(weatherCode)) {\r\n          icon = key\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\nreturn <div\r\n      style={{border:'solid lightcoral',        \r\n              borderRadius:'2vw',\r\n              borderWidth:'1vw',\r\n              maxHeight:'100vh',              \r\n              height:'80vw',\r\n              width:'80vw',\r\n              maxWidth:'100vh',\r\n              marginLeft:'auto',\r\n              marginRight:'auto',\r\n              backgroundImage:`url(./scenes/${scene}.png)`,\r\n              backgroundSize:'100% 100%',\r\n              backgroundPosition:'center'}}>\r\n        <Textfit mode='single'\r\n          forceSingleModeWidth={false}\r\n          max={1000}\r\n           style={{backgroundColor:'yellow',\r\n                   backgroundImage:`url(./icons/${icon}.png)`,\r\n                   backgroundPosition:'center',\r\n                   backgroundSize:'cover',\r\n                   width:'25%',\r\n                   height:'25%',\r\n                   marginLeft:'auto',\r\n                   marginRight:'2%',\r\n                   marginTop:'2%',\r\n                   border:'solid lightcoral',\r\n                   color:'white',\r\n                   textShadow: '-.015em -.015em 0 #000, .015em -.015em 0 #000, -.015em .015em 0 #000, .015em .015em 0 #000', \r\n                   borderRadius:'10%',\r\n                   fontWeight:'bold'\r\n                   }}>\r\n          {`${temperature}°`}\r\n        </Textfit>    \r\n        <Textfit mode='single'\r\n          max={1000}\r\n           style={{backgroundColor:'pink',\r\n                   backgroundPosition:'center',\r\n                   backgroundSize:'cover',\r\n                   width:'25%',\r\n                   height:'8%',\r\n                   marginLeft:'auto',\r\n                   marginRight:'2%',\r\n                   marginTop:'2%',\r\n                   border:'solid lightcoral',\r\n                   color:'white',                   \r\n                   borderRadius:'10%',\r\n                   textAlign:'center',\r\n                   fontWeight:'bold',                  \r\n                   paddingLeft:'1%',\r\n                   paddingRight:'1%',\r\n                   paddingBottom:'9%'\r\n                   }}>\r\n          {`${time}`}\r\n        </Textfit>\r\n  </div>    \r\n}\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => \r\n<div\r\n  style={{\r\n    marginLeft:'auto',\r\n    marginRight:'auto',\r\n    width:'80%',\r\n    backgroundColor:\"lightcoral\",\r\n    borderRadius:'2vw',\r\n    border:'pink'\r\n  }}>    \r\n      <h2\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '5vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%',\r\n        marginTop:'1%'\r\n    }}>\r\n        What is this?\r\n      </h2>\r\n<h2\r\n    style={{\r\n      color: 'white',\r\n      fontSize: '4vw',\r\n      fontFamily:'Patrick Hand',\r\n      paddingLeft:'2vw',\r\n      paddingRight:'2vw'\r\n  }}> coco's weather app presents the solution for when you just don't know what to wear outside! Come night, rain, snow, or sunshine this app will make sure you're appropriately dressed for the occasion....\r\n  </h2>   \r\n</div>","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({listOfCredits}) =>\r\n    <div\r\n    style={{\r\n      marginLeft:'auto',\r\n      marginRight:'auto',\r\n      width:'80%',\r\n      minWidth:'80%',\r\n      backgroundColor:\"lightcoral\",\r\n      borderRadius:'2vw',\r\n      border:'pink'\r\n    }}>     \r\n      <h2\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '5vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%',\r\n        marginTop:'1%'\r\n    }}>\r\n        Who Made This?\r\n      </h2>\r\n      {listOfCredits.map(credit =>       \r\n      <h2 key={credit}\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '4vw',\r\n        fontFamily:'Patrick Hand',\r\n        paddingLeft:'2%'\r\n    }}>> {credit}\r\n      </h2>)}                        \r\n    </div>","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({handleClick, location}) => \r\n      <button \r\n        onClick={() => handleClick()}\r\n        style={{\r\n          width:'50%',\r\n          marginLeft:'auto',\r\n          marginRight:'auto',\r\n          backgroundColor:'lightcoral',\r\n          border:'none',\r\n          fontFamily:'Patrick Hand',\r\n          fontSize:'6vw',\r\n          outline:'none',\r\n          color:'white'\r\n        }}>\r\n        {`Change Location (${location})`}\r\n      </button>","import HashLoader from \"react-spinners/HashLoader\"\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => <div className='sweet-loading'\r\nstyle={{\r\n  position:'fixed',\r\n  left:\"50%\",\r\n  top:\"50%\",\r\n  transform: \"translate(-50%, 50%)\"\r\n}}>\r\n  <HashLoader color='#FFB7FE'/>\r\n</div>","import Modal from 'react-modal'\r\nimport React from 'react';  \r\n\r\nModal.setAppElement('#root')\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function ({errorMessage}) {\r\n return <Modal isOpen={errorMessage}>\r\n                 <h2>{errorMessage}</h2>\r\n        </Modal>\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport weatherService from \"./services/weather\"\r\nimport ChangeLocationModal from \"./components/ChangeLocationModal\"\r\nimport TitleBar from \"./components/TitleBar\"\r\nimport Scene from \"./components/Scene\"\r\nimport Description from \"./components/Description\";\r\nimport Credits from \"./components/Credits\";\r\nimport ChangeLocationButton from \"./components/ChangeLocationButton\";\r\nimport Loader from \"./components/Loader\";\r\nimport ErrorMessage from \"./components/ErrorMessage\"\r\n    \r\nfunction App() {\r\n  const [temperature, setTemperature] = useState(0)\r\n  const [weatherCode, setWeatherCode] = useState(0)\r\n  const [time, setTime] = useState('')\r\n  const [showLocationModal, setShowLocationModal] = useState(false)\r\n  const [zipcode, setZipCode] = useState(null)\r\n  const [userZipCode, setUserZipCode] = useState(null)\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [isBadZipCode, setIsBadZipCode] = useState(false)\r\n  const [locationName, setLocationName] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n \r\n  useEffect(() => {  \r\n    (async () => {\r\n      setLoaded(false)\r\n      setIsBadZipCode(false)\r\n      try {\r\n        const location = userZipCode ? \r\n                          await weatherService.getbyzipcode(userZipCode) :\r\n                          await weatherService.get()\r\n\r\n        setTime(location.time)\r\n        setTemperature(location.temperature)\r\n        setZipCode(location.zipcode)\r\n        setWeatherCode(location.weatherCode)\r\n        setIsBadZipCode(false)\r\n        setShowLocationModal(false)\r\n        setLoaded(true)            \r\n        setUserZipCode(location.zipcode)    \r\n        setLocationName(location.name) \r\n      }\r\n      catch (err) {\r\n        if (err.response) {\r\n          if (err.response.status === 400) {\r\n            setIsBadZipCode(true)\r\n            setLoaded(true)\r\n            setShowLocationModal(true)              \r\n          } else {\r\n            setErrorMessage(err.response.data)      \r\n          }         \r\n        }\r\n      }                            \r\n    })()\r\n  }\r\n  ,[userZipCode])\r\n\r\n  const handleNewZipCode = (formZipCode) => {  \r\n    if (formZipCode) {\r\n      setZipCode(formZipCode)\r\n      setUserZipCode(formZipCode)\r\n      setShowLocationModal(false)\r\n    } else {\r\n      setShowLocationModal(false)\r\n      setIsBadZipCode(false)\r\n    }\r\n  }\r\n\r\n  const handleBadZipCode = (formZipCode) => {   \r\n    setShowLocationModal(true)\r\n    setIsBadZipCode(true)\r\n  }  \r\n\r\n  const handleLocationButtonClick = () => {\r\n    setShowLocationModal(true)  \r\n  }\r\n  if (errorMessage) {\r\n    return <ErrorMessage errorMessage={errorMessage} />\r\n  } else if (loaded && temperature && weatherCode && time && zipcode) {\r\n      return <div style={{\r\n      backgroundColor: '#D011FF',\r\n      backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' %3E%3Cdefs%3E%3ClinearGradient id='a' x1='0' x2='0' y1='0' y2='1' gradientTransform='rotate(0,0.5,0.5)'%3E%3Cstop offset='0' stop-color='%23FF77CF'/%3E%3Cstop offset='1' stop-color='%23F3FF78'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cpattern id='b' width='12' height='12' patternUnits='userSpaceOnUse'%3E%3Ccircle fill='%23D011FF' cx='6' cy='6' r='6'/%3E%3C/pattern%3E%3Crect width='100%25' height='100%25' fill='url(%23a)'/%3E%3Crect width='100%25' height='100%25' fill='url(%23b)' fill-opacity='0.08'/%3E%3C/svg%3E\")`,\r\n      backgroundAttachment: 'fixed'}}>\r\n                <ChangeLocationModal \r\n                    show={showLocationModal || isBadZipCode} \r\n                    zipcode={zipcode}\r\n                    isBadZipCode={isBadZipCode}\r\n                    handleNewZipCode={handleNewZipCode}\r\n                    handleBadZipCode={handleBadZipCode}/>\r\n                    <div className=\"flex\"\r\n                    style={{\r\n                      display:\"flex\",\r\n                      flexDirection:\"column\",\r\n                      minHeight:'100vh',\r\n                      gap:'1vw'}}>\r\n                  <TitleBar title=\"Coco's Weather App!\" />\r\n                  <Scene temperature={temperature} time={time} weatherCode={weatherCode} />\r\n                  <ChangeLocationButton handleClick={handleLocationButtonClick} \r\n                                        location={locationName}  />    \r\n                  <div style={{flexGrow:1}}/>\r\n                  <Description />\r\n                  <Credits listOfCredits={['inventor Coco Moore', \r\n                                           'developer Jesse Bergerstock', \r\n                                           'artist Jasmine Sutton']}\r\n                            style={{marginBottom:'auto'}}/>  \r\n                  <div/>\r\n                  <div style={{flexGrow:1}}/>\r\n                </div> \r\n              </div>        \r\n  } else {\r\n    return <Loader/>\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}